#########################################################################
# Title:         Saltbox: Docker | Default Variables                    #
# Author(s):     desimaniac                                             #
# URL:           https://github.com/saltyorg/Saltbox                    #
# --                                                                    #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
################################
# Settings
################################

# Format is ["8.8.8.8", "8.8.4.4"]
docker_dns: []

################################
# Docker APT Key
################################

docker_apt_key_id: 0EBFCD88

docker_apt_key_url: https://download.docker.com/linux/ubuntu/gpg

################################
# Docker APT Repository
################################

docker_apt_repo_version: stable

docker_apt_repo_url_old: "deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} {{ docker_apt_repo_version }}"  # noqa line-length

docker_apt_repo_url_old2: "deb [arch=amd64 signed-by=/usr/share/keyrings/docker.gpg] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} {{ docker_apt_repo_version }}"  # noqa line-length

docker_apt_repo_url: "deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/docker.asc] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} {{ docker_apt_repo_version }}"  # noqa line-length

docker_apt_repo_filename: docker

################################
# Docker APT Package
################################

# Version

docker_version: "latest"

# Docker CE

docker_ce_name: "Docker CE"

docker_ce_package: "{{ 'docker-ce' if (docker_version is defined and docker_version | lower == 'latest')
                    else 'docker-ce=*' + docker_version + '*~' + ansible_distribution | lower + '-' + ansible_distribution_release | lower }}"

docker_ce_filepath: "/usr/bin/dockerd"

docker_ce_dpkg: "docker-ce"

# Docker CE CLI

docker_ce_cli_name: "Docker CE CLI"

docker_ce_cli_package: "{{ 'docker-ce-cli' if (docker_version is defined and docker_version | lower == 'latest')
                        else 'docker-ce-cli=*' + docker_version + '*~' + ansible_distribution | lower + '-' + ansible_distribution_release | lower }}"

docker_ce_cli_filepath: "/usr/bin/docker"

docker_ce_cli_dpkg: "docker-ce-cli"

# Containerd

containerd_io_name: "Containerd"

containerd_io_package: "containerd.io"

containerd_io_filepath: "/usr/bin/containerd"

containerd_io_dpkg: "containerd.io"

# Docker Compose

compose_cli_name: "Docker Compose"

compose_cli_package: "docker-compose-plugin"

compose_cli_filepath: "docker compose"

compose_cli_dpkg: "docker-compose-plugin"

# Docker Rootless Extras

docker_rootless_name: "Docker Rootless Extras"

docker_rootless_package: "docker-ce-rootless-extras"

docker_rootless_filepath: "/usr/bin/rootlesskit"

docker_rootless_dpkg: "docker-ce-rootless-extras"

# Misc

docker_package_state: "{{ 'latest' if (docker_version is defined and docker_version | lower == 'latest') else 'present' }}"

put_docker_dpkg_into_hold: true

docker_containers_startup_delay: "{{ 30 if continuous_integration else 120 }}"

docker_filesystem_path: "/media/docker-volume.img"

docker_filesystem_size: "20G"

docker_ipv6: "{{ dns.ipv6 }}"

# Service

docker_service_after: "{{ mergerfs_service_name }}"

docker_service_sleep: "{{ 0 if continuous_integration else 120 }}"

docker_service_force: true

docker_update_hosts_service_runtime_max: "3600s"

docker_daemon_storage_driver: "{{ ('zfs' in var_lib_file_system.stdout) | ternary('zfs', 'overlay2') }}"

fuse_overlayfs_releases_url: "{{ svm }}https://api.github.com/repos/containers/fuse-overlayfs/releases/latest"

fuse_overlayfs_release_lookup_command: |
  curl -s {{ fuse_overlayfs_releases_url }} \
    | jq -r ".assets[] | select(.name | test(\"fuse-overlayfs-x86_64\")) \
    | .browser_download_url"

################################
# Docker Compose
################################

compose_cleanup_switch: "{{ compose_install_switch | default(true) }}"
